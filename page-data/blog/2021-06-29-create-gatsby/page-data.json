{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2021-06-29-create-gatsby/","result":{"data":{"markdownRemark":{"html":"<h2>시작하기</h2>\n<ul>\n<li>개츠비 사이트는 <a href=\"https://www.gatsbyjs.com/starters/?\">Gatsby 스타터 템플릿</a>를 이용해 쉽게 템플릿이 적용된 사이트를 만들 수 있다. 하지만 난 왠지 온갖 에러에 고통만 받고 그냥 직접 만들려고했는데 <a href=\"https://github.com/sungik-choi/gatsby-starter-apple\">우연히 발견한 스타터 템플릿</a>을 자포자기하는 심정으로 시도해봤는데 됐다!!</li>\n</ul>\n<h3>Default 스타터로 사이트 만들기</h3>\n<ul>\n<li>Gatsby 커맨드라인 툴을 설치하고 <code>gatsby new</code> 로 개츠비 사이트를 만든다</li>\n</ul>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"shell\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">npm install -g gatsby-cli</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">gatsby new [폴더 이름]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">cd [폴더 이름]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">gatsby develop</span></span></code></pre>\n<ul>\n<li><code>gatsby develop</code> 을 치면 </li>\n<li><code>localhost:8000</code> 에 들어가면 다음과 같은 스타터 페이지가 뜬다\n<img src=\"https://images.velog.io/images/jehjong/post/47d09912-75bc-43eb-beba-39b38afa8ea6/image.png\"></li>\n</ul>\n<h3>커스텀 스타터 템플릿으로 사이트 만들기</h3>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"shell\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">gatsby new [폴더 이름] https://github.com/sungik-choi/gatsby-starter-apple</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">cd [폴더 이름]</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">gatsby develop</span></span></code></pre>\n<ul>\n<li>드디어 되는 템플릿을 만나다니.. 눈물 😭 안되는 템플릿이 왜이리 많은걸까..\n<img src=\"https://images.velog.io/images/jehjong/post/7a40d9c1-1ee7-4e1d-a977-521f0b1f0d76/image.png\"></li>\n</ul>\n<h3>Github Pages에 배포하기</h3>\n<ul>\n<li>\n<p>gh-pages 패키지 설치 필수</p>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"shell\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">npm i gh-pages --save-dev</span></span></code></pre>\n</li>\n<li>\n<p><code>package.json</code> 의 scripts에 다음 내용 추가</p>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"shell\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">{</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">&quot;scripts&quot;: {</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">    &quot;deploy&quot;: &quot;gatsby build &amp;&amp; gh-pages -d public -b master&quot;</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">}</span></span></code></pre>\n</li>\n<li>\n<p><code>[username].github.io</code> 라는 이름의 git 레포를 생성하고 현재 디렉토리의 remote로 연결한다</p>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"shell\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">git remote add origin [git 레포 주소]</span></span></code></pre>\n</li>\n<li>\n<p>develop 브랜치를 생성해서 deploy 한다</p>\n<pre class=\"grvsc-container github-light-theme grvsc-ps-t4tStz\" data-language=\"shell\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">git checkout -b develop</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">npm run deploy</span></span></code></pre>\n</li>\n<li>잠시 기다리면 배포가 된다\n<img src=\"https://images.velog.io/images/jehjong/post/c985be2b-567c-4fd6-9cc8-030ec2afdec1/image.png\"></li>\n<li>본인의 <code>[username].github.io</code> 주소로 이동하면 배포가 된 것을 확인할 수 있다\n<img src=\"https://images.velog.io/images/jehjong/post/3f966d9a-7f19-4f0f-8574-b0c31deba2b5/image.png\"></li>\n<li>특이하게도 깃헙 레포에는 아무것도 올라가있지 않은데 배포가 됐다. <code>[username].github.io</code> 주소만 빌려오고 레포는 사용하지 않아도 되는 것 같다.</li>\n</ul>\n<h3>포스트 작성</h3>\n<ul>\n<li>위 템플릿의 경우 <code>/src/posts/blog/</code> 에 포스트를 추가하면 된다. 마크다운 문법으로 작성하면 되니까 무척 편리하다</li>\n<li>포스스트 내의 카테고리란에 새 카테고리 이름을 적으면 바로 새로운 카테고리가 생긴다. 반대로 특정 카테고리 이름을 적어둔 포스트들을 다 지우면 해당 카테고리는 사라진다</li>\n</ul>\n<h2>배포를 어디서 할지에 대한 고민</h2>\n<h4>Github Pages</h4>\n<ul>\n<li>\n<p>Github Pages에 배포하는 것의 단점은, 버전관리는 github 레포에서 해야하는데 배포는 로컬에서 바로 된다는 점이다. Gatsby로 블로그를 직접 만들어보기 전에 '원본소스의 버전관리를 깃헙으로 하기 불편해서 netlify로 배포했다'는 글을 어디서 보고 이해가 안 갔었는데 한번 해보니 이해가 갔다. 내가 생각해본 단점을 정리해보면 다음과 같다:</p>\n<ul>\n<li>레포에 <code>git push</code>한다고 웹사이트가 업데이트되는 것이 아니라 <code>npm run deploy</code>로 배포를 해야한다. 즉, 레포에 올려둔 버전이 내 웹사이트 내용과 다를 수 있다는 묘한 찝찝함이 있다.</li>\n<li>\n<p>로컬에서 웹사이트 소스 코드를 변경한 뒤 매번 <code>git push</code>와 <code>npm run deploy</code>를 둘 다 해줘야한다는 번거로움이 있다.</p>\n<h4>Netlify</h4>\n</li>\n</ul>\n</li>\n<li>\n<p>하지만 또 장점도 있다. netlify로 배포할 경우 사이트 도메인이 <code>netlify.app</code> 으로 끝나는데 이것보다는 <code>github.io</code>라는 이름이 더 마음에 든다. 별 이유는 아닌 것 같지만 왠지 내게는 중요하게 느껴졌다 🤔</p>\n<ul>\n<li>\n<p>그래도 무료 배포로는 Netlify가 가장 유명한 것 같아서 Github Pages가 아닌 것을 택한다면 Netlify를 택하게 될 것 같다.</p>\n<h4>Gatsby</h4>\n</li>\n</ul>\n</li>\n<li>\n<p>사실 Gatsby 에서도 사이트를 만들어 클라우드에 배포가 된다. 무료 계정은 사이트를 하나 만들 수 있고 github 레포랑도 연결할 수 있다.\n<img src=\"https://images.velog.io/images/jehjong/post/3f947781-ae67-4bf0-802b-56faa0a5ce96/image.png\"></p>\n<ul>\n<li>\n<p>하지만 이 경우 사이트 이름이 길고 괴상해져서 사용하고 싶지는 않았다.</p>\n<h4>도메인 구매</h4>\n</li>\n</ul>\n</li>\n<li>결국 내게 어디서 배포를 할지는 사이트 도메인이 무엇이 되는지가 가장 중요한 것 같다. <code>github.io</code>는 버전관리의 불편함이 있음에도 도메인이 왠지 마음에 들어 선택하게 됐다. 기존 블로그 도메인과 같았다는 이유도 있었다.</li>\n<li>하지만 도메인을 구매하게 되면 <code>joeyful.site</code>나 <code>joeyful.me</code> 같은 더 마음에 드는 이름을 가질 수 있고 어디서 배포하든 상관이 없어진다. 나중에 도메인을 구매한 뒤에 Gatsby나 Netlify에서 배포하면 어떨까 싶다</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .github-light-theme {\n    background-color: #ffffff;\n    color: #000000;\n  }\n  .github-light-theme .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  body[data-theme=dark] .grvsc-ps-t4tStz { color: #ffffff; }\n  body[data-theme=dark] .grvsc-ps-t4tStz .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n</style>","frontmatter":{"title":"Gatsby로 기술블로그 만들기","desc":"Github Pages vs Netlify vs Gatsby","thumbnail":{"childImageSharp":{"fixed":{"src":"/static/b4e70f9bc2c95ecbdc8536879878a910/2244e/thumbnail.jpg"}}},"date":"2021-06-29","category":"Blog"}}},"pageContext":{"slug":"/blog/2021-06-29-create-gatsby/"}},"staticQueryHashes":["1990743003"]}